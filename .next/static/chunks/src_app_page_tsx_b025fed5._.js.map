{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/seishu/Documents/project_lv2/frontend/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\n\ntype Product = {\n  CODE: string;\n  NAME: string;\n  PRICE: number;\n};\n\nexport default function POSPage() {\n  const [code, setCode] = useState(\"\");\n  const [product, setProduct] = useState<Product | null>(null);\n  const [error, setError] = useState(\"\");\n  const [list, setList] = useState<Product[]>([]);\n  const [quantities, setQuantities] = useState<{ [code: string]: number }>({});\n  const [readerVisible, setReaderVisible] = useState(false);\n\n  const scannerRef = useRef<HTMLDivElement>(null);\n  const scannerInstance = useRef<Html5QrcodeScanner | null>(null);\n\n  const handleRead = useCallback(async (inputCode?: string) => {\n    const targetCode = inputCode?.trim().replace(/\\r|\\n/g, \"\") || code.trim();\n    if (!targetCode) return;\n  \n    try {\n      const res = await fetch(`${process.env.NEXT_PUBLIC_API_BASE_URL}/product?code=${targetCode}`);\n      if (!res.ok) throw new Error(\"商品が見つかりません\");\n      const data = await res.json();\n      setProduct(data);\n      setError(\"\");\n    } catch (err) {\n      console.error(\"❌ 検索エラー:\", err);\n      setProduct(null);\n      setError(\"商品マスタ未登録です\");\n    }\n  }, [code]);  // ここが依存配列。codeが変わったら再生成\n\n  useEffect(() => {\n    if (readerVisible && scannerRef.current) {\n      if (!scannerInstance.current) {\n        scannerInstance.current = new Html5QrcodeScanner(\"reader\", {\n          fps: 10,\n          qrbox: { width: 300, height: 100 },\n          rememberLastUsedCamera: true,\n          aspectRatio: 1.5,\n        }, false);\n\n        scannerInstance.current.render(\n          (decodedText) => {\n            const cleaned = decodedText.trim().replace(/\\r|\\n/g, \"\");\n            setCode(cleaned);\n            handleRead(cleaned);\n          },\n          (err) => {\n            console.warn(\"スキャンエラー:\", err);\n          }\n        );\n      }\n    }\n\n    return () => {\n      if (scannerInstance.current) {\n        scannerInstance.current.clear().catch(console.error);\n        scannerInstance.current = null;\n      }\n    };\n  }, [readerVisible, handleRead]);  // ← ここに handleRead を追加\n\n  \n\n  const handleAdd = () => {\n    if (!product) return;\n    const existing = list.find((p) => p.CODE === product.CODE);\n    if (!existing) {\n      setList([...list, product]);\n      setQuantities({ ...quantities, [product.CODE]: 1 });\n    } else {\n      setQuantities({\n        ...quantities,\n        [product.CODE]: quantities[product.CODE] + 1,\n      });\n    }\n    setProduct(null);\n    setCode(\"\");\n  };\n\n  const handleQuantity = (code: string, delta: number) => {\n    const newQty = (quantities[code] || 0) + delta;\n    if (newQty <= 0) {\n      setList(list.filter((item) => item.CODE !== code));\n      const { [code]: __unused, ...rest } = quantities;\n      console.log(__unused);\n      setQuantities(rest);\n    } else {\n      setQuantities({ ...quantities, [code]: newQty });\n    }\n  };\n\n  const handleRemove = (code: string) => {\n    setList(list.filter((item) => item.CODE !== code));\n    const { [code]: __unused, ...rest } = quantities;\n    console.log(__unused);\n    setQuantities(rest);\n  };\n\n  const handlePurchase = async () => {\n    const payload = list.flatMap((item) =>\n      Array(quantities[item.CODE]).fill({\n        CODE: item.CODE,\n        NAME: item.NAME,\n        PRICE: item.PRICE,\n      })\n    );\n\n    try {\n      const res = await fetch(\n        `http://localhost:8000/purchase?emp_cd=9999999999&store_cd=001&pos_no=001`,\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(payload),\n        }\n      );\n      if (!res.ok) throw new Error(\"購入登録に失敗しました\");\n      const data = await res.json();\n      alert(`\\uD83D\\uDCDD ご注文ありがとうございました！\\n合計金額: ￥${data.total_amount} 円`);\n      setList([]);\n      setQuantities({});\n    } catch (err) {\n      alert(\"❌ 購入処理中にエラーが発生しました\");\n      console.error(err);\n    }\n  };\n\n  const total = list.reduce(\n    (sum, item) => sum + item.PRICE * (quantities[item.CODE] || 0),\n    0\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white p-6 max-w-xl mx-auto space-y-6\">\n      <h1 className=\"text-2xl font-bold text-center\">POSレジシステム</h1>\n\n      <div className=\"bg-gray-800 p-4 rounded shadow space-y-3\">\n        <button\n          onClick={() => setReaderVisible(!readerVisible)}\n          className=\"bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded w-full\"\n        >\n          スキャン（カメラ）\n        </button>\n        {readerVisible && (\n          <div\n            id=\"reader\"\n            ref={scannerRef}\n            className=\"w-full h-[300px] bg-black rounded overflow-hidden\"\n          />\n        )}\n      </div>\n\n      {product && (\n        <div className=\"bg-gray-800 p-4 rounded shadow space-y-2\">\n          <div className=\"text-sm\">コード: {product.CODE}</div>\n          <div className=\"text-sm\">名称: {product.NAME}</div>\n          <div className=\"text-sm\">単価: ￥{product.PRICE}</div>\n          <button\n            onClick={handleAdd}\n            className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded w-full\"\n          >\n            追加\n          </button>\n        </div>\n      )}\n\n      {error && <p className=\"text-red-400\">{error}</p>}\n\n      <div className=\"bg-gray-800 p-4 rounded shadow space-y-4\">\n        <h2 className=\"font-bold text-lg\">購入リスト</h2>\n        {list.map((item) => (\n          <div key={item.CODE} className=\"bg-gray-700 p-3 rounded space-y-2 text-sm\">\n            <div className=\"font-semibold text-base\">{item.NAME}</div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span>数量:</span>\n                <button\n                  onClick={() => handleQuantity(item.CODE, -1)}\n                  className=\"bg-red-500 hover:bg-red-600 text-white rounded-full w-6 h-6\"\n                >\n                  −\n                </button>\n                <span className=\"font-bold\">{quantities[item.CODE] || 0}</span>\n                <button\n                  onClick={() => handleQuantity(item.CODE, 1)}\n                  className=\"bg-green-500 hover:bg-green-600 text-white rounded-full w-6 h-6\"\n                >\n                  ＋\n                </button>\n              </div>\n              <div>単価: ￥{item.PRICE}</div>\n              <button\n                onClick={() => handleRemove(item.CODE)}\n                className=\"text-red-500 font-bold text-sm ml-2\"\n              >\n                削除\n              </button>\n            </div>\n            <div className=\"text-right font-semibold\">\n              小計: ￥{item.PRICE * (quantities[item.CODE] || 0)}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"bg-gray-800 p-4 rounded shadow text-center\">\n        <h2 className=\"text-lg font-bold mb-2\">お支払額</h2>\n        <p className=\"text-2xl text-red-500\">￥{total}</p>\n      </div>\n\n      <button\n        onClick={handlePurchase}\n        disabled={list.length === 0}\n        className=\"bg-blue-600 hover:bg-blue-700 text-white py-3 px-4 rounded w-full text-lg font-bold\"\n      >\n        購入\n      </button>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}